# Include in configuration.yaml via
# template: !include templates.yaml
# Note: Can only have one template include though


################################################################################
# SMARTFRAME TRIGGERS ##########################################################
################################################################################

# waveshare-epaper-6625d8
- binary_sensor:
    - name: Waveshare ePaper 6625d8 Trigger
      unique_id: "waveshare-epaper-6625d8-trigger"
      delay_off: 00:01:00
      state: >-
        {%- if states('binary_sensor.hallway_motion_motion') == 'on' %}
          on
        {%- else -%}
          off
        {%- endif -%}


################################################################################
# SMARTFRAME WEATHER ###########################################################
################################################################################

- trigger:
    - platform: time_pattern
      hours: /1
      #minutes: /10
  sensor:
    - name: TimeOfDay Greeting
      unique_id: timeofday_greeting
      state: >
        {% set state = states('sensor.time') %}
        {% if '06:00' <= state < '12:00' %}
        Good Morning!
        {% elif '12:00' <= state < '18:00' %}
        Good Afternoon!
        {% elif '18:00' <= state < '22:00' %}
        Good Evening!
        {% else %}
        Good Night!
        {% endif %}
    - name: Long Date
      unique_id: long_date
      state: "{{ now().timestamp() | timestamp_custom('%A %-d %B %Y') }}"

- trigger:
    - platform: time_pattern
      hours: /1
      #minutes: /10
  action:
    - service: weather.get_forecasts
      data:
        type: hourly
      target:
        entity_id:
          - weather.forecast_home
      response_variable: forecast_hourly
  sensor:
    - name: Weather Forecast Hourly
      unique_id: weather_forecast_hourly
      state: "{{ states('weather.forecast_home') }}"
      attributes:
        condition_now: >
          {% set cond_now = states('weather.forecast_home') %}
          {% if states('sun.sun') == 'below_horizon' %}
              {% if cond_now == 'sunny' %} clear-night {% elif cond_now == 'partlycloudy' %} partlycloudy-night {% else %} {{ cond_now }} {% endif %}
          {% else %}
              {{ cond_now }}
          {% endif %}

        datetime0: "{{ forecast_hourly['weather.forecast_home'].forecast[0].datetime }}"
        shorttime0: "{{ as_timestamp(forecast_hourly['weather.forecast_home'].forecast[0].datetime) | timestamp_custom('%I') | int }} {{ as_timestamp(forecast_hourly['weather.forecast_home'].forecast[0].datetime) | timestamp_custom('%p') }}"
        #condition0: "{{ forecast_hourly['weather.forecast_home'].forecast[0].condition }}"
        condition0: >
          {% set cond0 = forecast_hourly['weather.forecast_home'].forecast[0].condition %}
          {% set next_setting = as_timestamp(state_attr('sun.sun', 'next_setting')) %}
          {% set next_rising = as_timestamp(state_attr('sun.sun', 'next_rising')) %}
          {% set cond0_time = as_timestamp(forecast_hourly['weather.forecast_home'].forecast[0].datetime) %}
          {% if cond0_time < next_rising and next_rising < next_setting %}
              {% if cond0 == 'sunny' %} clear-night {% elif cond0 == 'partlycloudy' %} partlycloudy-night {% else %} {{ cond0 }} {% endif %}
          {% else %}
              {{ cond0 }}
          {% endif %}
        temperature0: "{{ forecast_hourly['weather.forecast_home'].forecast[0].temperature }}"
        #wind_speed0: "{{ forecast_hourly['weather.forecast_home'].forecast[0].wind_speed }}"
        #precipitation0: "{{ forecast_hourly['weather.forecast_home'].forecast[0].precipitation }}"

        datetime1: "{{ forecast_hourly['weather.forecast_home'].forecast[1].datetime }}"
        shorttime1: "{{ as_timestamp(forecast_hourly['weather.forecast_home'].forecast[1].datetime) | timestamp_custom('%I') | int }} {{ as_timestamp(forecast_hourly['weather.forecast_home'].forecast[1].datetime) | timestamp_custom('%p') }}"
        #condition1: "{{ forecast_hourly['weather.forecast_home'].forecast[1].condition }}"
        condition1: >
          {% set cond1 = forecast_hourly['weather.forecast_home'].forecast[1].condition %}
          {% set next_setting = as_timestamp(state_attr('sun.sun', 'next_setting')) %}
          {% set next_rising = as_timestamp(state_attr('sun.sun', 'next_rising')) %}
          {% set cond1_time = as_timestamp(forecast_hourly['weather.forecast_home'].forecast[1].datetime) %}
          {% if cond1_time < next_rising and next_rising < next_setting %}
              {% if cond1 == 'sunny' %} clear-night {% elif cond1 == 'partlycloudy' %} partlycloudy-night {% else %} {{ cond1 }} {% endif %}
          {% else %}
              {{ cond1 }}
          {% endif %}
        temperature1: "{{ forecast_hourly['weather.forecast_home'].forecast[1].temperature }}"
        #wind_speed1: "{{ forecast_hourly['weather.forecast_home'].forecast[1].wind_speed }}"
        #precipitation1: "{{ forecast_hourly['weather.forecast_home'].forecast[1].precipitation }}"

        datetime2: "{{ forecast_hourly['weather.forecast_home'].forecast[2].datetime }}"
        shorttime2: "{{ as_timestamp(forecast_hourly['weather.forecast_home'].forecast[2].datetime) | timestamp_custom('%I') | int }} {{ as_timestamp(forecast_hourly['weather.forecast_home'].forecast[2].datetime) | timestamp_custom('%p') }}"
        #condition2: "{{ forecast_hourly['weather.forecast_home'].forecast[2].condition }}"
        condition2: >
          {% set cond2 = forecast_hourly['weather.forecast_home'].forecast[2].condition %}
          {% set next_setting = as_timestamp(state_attr('sun.sun', 'next_setting')) %}
          {% set next_rising = as_timestamp(state_attr('sun.sun', 'next_rising')) %}
          {% set cond2_time = as_timestamp(forecast_hourly['weather.forecast_home'].forecast[2].datetime) %}
          {% if cond2_time < next_rising and next_rising < next_setting %}
              {% if cond2 == 'sunny' %} clear-night {% elif cond2 == 'partlycloudy' %} partlycloudy-nighty {% else %} {{ cond2 }} {% endif %}
          {% else %}
              {{ cond2 }}
          {% endif %}
        temperature2: "{{ forecast_hourly['weather.forecast_home'].forecast[2].temperature }}"
        #wind_speed2: "{{ forecast_hourly['weather.forecast_home'].forecast[2].wind_speed }}"
        #precipitation2: "{{ forecast_hourly['weather.forecast_home'].forecast[2].precipitation }}"

        datetime3: "{{ forecast_hourly['weather.forecast_home'].forecast[3].datetime }}"
        shorttime3: "{{ as_timestamp(forecast_hourly['weather.forecast_home'].forecast[3].datetime) | timestamp_custom('%I') | int }} {{ as_timestamp(forecast_hourly['weather.forecast_home'].forecast[3].datetime) | timestamp_custom('%p') }}"
        #condition3: "{{ forecast_hourly['weather.forecast_home'].forecast[3].condition }}"
        condition3: >
          {% set cond3 = forecast_hourly['weather.forecast_home'].forecast[3].condition %}
          {% set next_setting = as_timestamp(state_attr('sun.sun', 'next_setting')) %}
          {% set next_rising = as_timestamp(state_attr('sun.sun', 'next_rising')) %}
          {% set cond3_time = as_timestamp(forecast_hourly['weather.forecast_home'].forecast[3].datetime) %}
          {% if cond3_time < next_rising and next_rising < next_setting %}
              {% if cond3 == 'sunny' %} clear-night {% elif cond3 == 'partlycloudy' %} partlycloudy-night {% else %} {{ cond3 }} {% endif %}
          {% else %}
              {{ cond3 }}
          {% endif %}
        temperature3: "{{ forecast_hourly['weather.forecast_home'].forecast[3].temperature }}"
        #wind_speed3: "{{ forecast_hourly['weather.forecast_home'].forecast[3].wind_speed }}"
        #precipitation3: "{{ forecast_hourly['weather.forecast_home'].forecast[3].precipitation }}"

        datetime4: "{{ forecast_hourly['weather.forecast_home'].forecast[4].datetime }}"
        shorttime4: "{{ as_timestamp(forecast_hourly['weather.forecast_home'].forecast[4].datetime) | timestamp_custom('%I') | int }} {{ as_timestamp(forecast_hourly['weather.forecast_home'].forecast[4].datetime) | timestamp_custom('%p') }}"
        #condition4: "{{ forecast_hourly['weather.forecast_home'].forecast[4].condition }}"
        condition4: >
          {% set cond4 = forecast_hourly['weather.forecast_home'].forecast[4].condition %}
          {% set next_setting = as_timestamp(state_attr('sun.sun', 'next_setting')) %}
          {% set next_rising = as_timestamp(state_attr('sun.sun', 'next_rising')) %}
          {% set cond4_time = as_timestamp(forecast_hourly['weather.forecast_home'].forecast[4].datetime) %}
          {% if cond4_time < next_rising and next_rising < next_setting %}
              {% if cond4 == 'sunny' %} clear-night {% elif cond4 == 'partlycloudy' %} partlycloudy-night {% else %} {{ cond4 }} {% endif %}
          {% else %}
              {{ cond4 }}
          {% endif %}
        temperature4: "{{ forecast_hourly['weather.forecast_home'].forecast[4].temperature }}"
        #wind_speed4: "{{ forecast_hourly['weather.forecast_home'].forecast[4].wind_speed }}"
        #precipitation4: "{{ forecast_hourly['weather.forecast_home'].forecast[4].precipitation }}"

- trigger:
    - platform: time_pattern
      hours: /1
      #minutes: /10
  action:
    - service: weather.get_forecasts
      data:
        type: daily
      target:
        entity_id:
          - weather.forecast_home
      response_variable: forecast_daily
  sensor:
    - name: Weather Forecast Daily
      unique_id: weather_forecast_daily
      state: "{{ states('weather.forecast_home') }}"
      attributes:
        condition_now: >
          {% set cond_now = states('weather.forecast_home') %}
          {% if states('sun.sun') == 'below_horizon' %}
              {% if cond_now == 'sunny' %} clear-night {% elif cond_now == 'partlycloudy' %} partlycloudy-night {% else %} {{ cond_now }} {% endif %}
          {% else %}
              {{ cond_now }}
          {% endif %}
        temperature_now: "{{ state_attr('weather.forecast_home', 'temperature') }}"

        datetime0: "{{ forecast_daily['weather.forecast_home'].forecast[0].datetime }}"
        shorttime0: "{{ as_timestamp(forecast_daily['weather.forecast_home'].forecast[0].datetime) | timestamp_custom('%A') }}"
        condition0: "{{ forecast_daily['weather.forecast_home'].forecast[0].condition }}"
        temperature0: "{{ forecast_daily['weather.forecast_home'].forecast[0].temperature }}"
        templow0: "{{ forecast_daily['weather.forecast_home'].forecast[0].templow }}"
        humidity0: "{{ forecast_daily['weather.forecast_home'].forecast[0].humidity }}"
        wind_speed0: "{{ forecast_daily['weather.forecast_home'].forecast[0].wind_speed }}"
        wind_bearing0: "{{ forecast_daily['weather.forecast_home'].forecast[0].wind_bearing }}"
        precipitation0: "{{ forecast_daily['weather.forecast_home'].forecast[0].precipitation }}"

        datetime1: "{{ forecast_daily['weather.forecast_home'].forecast[1].datetime }}"
        shorttime1: "{{ as_timestamp(forecast_daily['weather.forecast_home'].forecast[1].datetime) | timestamp_custom('%A') }}"
        condition1: "{{ forecast_daily['weather.forecast_home'].forecast[1].condition }}"
        temperature1: "{{ forecast_daily['weather.forecast_home'].forecast[1].temperature }}"
        templow1: "{{ forecast_daily['weather.forecast_home'].forecast[1].templow }}"
        humidity1: "{{ forecast_daily['weather.forecast_home'].forecast[1].humidity }}"
        wind_speed1: "{{ forecast_daily['weather.forecast_home'].forecast[1].wind_speed }}"
        wind_bearing1: "{{ forecast_daily['weather.forecast_home'].forecast[1].wind_bearing }}"
        precipitation1: "{{ forecast_daily['weather.forecast_home'].forecast[1].precipitation }}"

        datetime2: "{{ forecast_daily['weather.forecast_home'].forecast[2].datetime }}"
        shorttime2: "{{ as_timestamp(forecast_daily['weather.forecast_home'].forecast[2].datetime) | timestamp_custom('%A') }}"
        condition2: "{{ forecast_daily['weather.forecast_home'].forecast[2].condition }}"
        temperature2: "{{ forecast_daily['weather.forecast_home'].forecast[2].temperature }}"
        templow2: "{{ forecast_daily['weather.forecast_home'].forecast[2].templow }}"
        humidity2: "{{ forecast_daily['weather.forecast_home'].forecast[2].humidity }}"
        wind_speed2: "{{ forecast_daily['weather.forecast_home'].forecast[2].wind_speed }}"
        wind_bearing2: "{{ forecast_daily['weather.forecast_home'].forecast[2].wind_bearing }}"
        precipitation2: "{{ forecast_daily['weather.forecast_home'].forecast[2].precipitation }}"

################################################################################
################################################################################
################################################################################
